#include <gmock/gmock.h>
#include <gtest/gtest.h>

#include <string>
#include <vector>

std::string gridSearch(const std::vector<std::string> &G, const std::vector<std::string> &P)
{
    size_t PN = P[0].size();
    for (size_t GI = 0; GI < G.size(); ++GI)
    {
        for (size_t p = G[GI].find(P[0], 0); p != std::string::npos; p = G[GI].find(P[0], p + 1))
        {
            size_t PI = 1;
            for (; PI < P.size() && PI + GI < G.size(); ++PI)
            {
                const auto B = G[PI + GI].begin() + p;
                const auto E = G[PI + GI].begin() + p + PN;
                if (!std::equal(B, E, P[PI].begin()))
                {
                    break;
                }
            }
            if (PI == P.size())
            {
                return "YES";
            }
        }
    }
    return "NO";
}

TEST(GridSearch, sample)
{
    const std::vector<std::string> G1 = {"7283455864", "6731158619", "8988242643", "3830589324",
                                         "2229505813", "5633845374", "6473530293", "7053106601",
                                         "0834282956", "4607924137"};
    const std::vector<std::string> P1 = {"9505", "3845", "3530"};
    EXPECT_EQ(gridSearch(G1, P1), "YES");

    const std::vector<std::string> G2 = {"400453592126560", "114213133098692", "474386082879648",
                                         "522356951189169", "887109450487496", "252802633388782",
                                         "502771484966748", "075975207693780", "511799789562806",
                                         "404007454272504", "549043809916990", "962410809534991",
                                         "445893523733475", "768705303214994", "650629270887160"};
    const std::vector<std::string> P2 = {"99", "99"};
    EXPECT_EQ(gridSearch(G2, P2), "NO");
    const std::vector<std::string> G3 = {
        "7652157548860692421022503", "9283597467877865303553675", "4160389485250089289309493",
        "2583470721457150497569300", "3220130778636571709490905", "3588873017660047694725749",
        "9288991387848870159567061", "4840101673383478700737237", "8430916536880190158229898",
        "8986106490042260460547150", "2591460395957631878779378", "1816190871689680423501920",
        "0704047294563387014281341", "8544774664056811258209321", "9609294756392563447060526",
        "0170173859593369054590795", "6088985673796975810221577", "7738800757919472437622349",
        "5474120045253009653348388", "3930491401877849249410013", "1486477041403746396925337",
        "2955579022827592919878713", "2625547961868100985291514", "3673299809851325174555652",
        "4533398973801647859680907"};
    const std::vector<std::string> P3 = {"5250", "1457", "8636", "7660", "7848"};
    EXPECT_EQ(gridSearch(G3, P3), "YES");
}
